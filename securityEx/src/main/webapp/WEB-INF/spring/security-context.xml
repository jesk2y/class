<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="bcryptEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<bean id="loginHandler"
		class="org.zerock.security.CustomLoginSuccessHandler"></bean>

	<bean id="customUserService"
		class="org.zerock.security.CustomUserDetailsService"></bean>

	<security:http>
		<security:intercept-url pattern="/sample/all"
			access="permitAll" />
			
		<security:intercept-url
			pattern="/sample/member" access="hasRole('ROLE_MEMBER')" />
			
		<security:intercept-url pattern="/sample/admin"
			access="hasRole('ROLE_ADMIN')" />

		<security:intercept-url pattern="/sample/register"
			access="isAuthenticated()" />

		<security:form-login login-page="/customLogin"
			authentication-success-handler-ref="loginHandler"
			authentication-failure-handler-ref="loginHandler" />
		<!-- 커스텀 로그인 있으면 커스텀 로그아웃도 있어야 로그아웃 가능 -->

		<security:logout logout-url="/customLogout" />
		<security:access-denied-handler
			error-page="/accessError" />

		<!-- <security:form-login /> <security:logout/> <security:access-denied-handler/> -->
		<!-- 이것들 안써주면 기본 로그인/로그아웃/접근제한표시 안됨 -->

		<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800"/>
	</security:http>

	<security:authentication-manager>
		<security:authentication-provider
			user-service-ref="customUserService">
			<security:password-encoder
				ref="bcryptEncoder">
				<!-- 얘가 있어야 로그인할때도 암호화시켜서 비교됨 -->
			</security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
